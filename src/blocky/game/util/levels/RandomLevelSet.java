package blocky.game.util.levels;

import java.util.ArrayList;
import java.util.List;

/**
 * Represents an endless set of randomly generated levels for the Blocky game. Levels are generated
 * as needed when the nextLevel() method is called.
 */
public class RandomLevelSet extends LevelSet {
  private final LevelGenerator generator; // INVARIANT: never null

  /**
   * Constructs a new RandomLevelSet that uses the given LevelGenerator to generate new levels.
   *
   * @param generator generator to use for random level generation
   * @throws IllegalArgumentException if given generator is null
   */
  public RandomLevelSet(LevelGenerator generator) throws IllegalArgumentException {
    super(levelList(generator));
    this.generator = generator;
  }

  @Override
  public Level nextLevel() {
    try {
      return super.nextLevel();
    } catch (IllegalStateException e) {
      this.levels.add(this.generator.generateLevel());
      return super.nextLevel();
    }
  }

  /**
   * Returns a list containing a single level generated by the given generator.
   *
   * @param generator generator to use for random level in list
   * @return list containing random level
   * @throws IllegalArgumentException if given generator is null
   */
  private static List<Level> levelList(LevelGenerator generator) throws IllegalArgumentException {
    if (generator == null) throw new IllegalArgumentException("Generator must be non-null.");

    List<Level> list = new ArrayList<>();
    list.add(generator.generateLevel());
    return list;
  }
}
